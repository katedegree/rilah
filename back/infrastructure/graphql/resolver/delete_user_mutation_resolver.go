package resolver

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.75

import (
	"back/domain/constant"
	"back/domain/entity"
	"back/infrastructure/repository"
	"back/infrastructure/request"
	"back/usecase"
	"context"
)

// DeleteUser is the resolver for the deleteUser field.
func (r *mutationResolver) DeleteUser(ctx context.Context, groupID uint32) (*entity.MutationResponse, error) {
	req := request.DeleteGroupRequest{
		GroupID: groupID,
	}
	msgs, ok := req.Validate()
	if !ok {
		return &entity.MutationResponse{
			Success:  false,
			Messages: msgs,
		}, nil
	}

	authUser := ctx.Value(constant.AUTH_USER_KEY).(*entity.UserEntity)
	orm := r.Resolver.Orm

	deleteGroupUsecase := usecase.NewDeleteGroupUsecase(
		repository.NewGroupRepository(orm),
	)
	_, err := deleteGroupUsecase.Execute(groupID, authUser.ID)
	if err != nil {
		return &entity.MutationResponse{
			Success:  false,
			Messages: []string{err.Message},
		}, nil
	}

	return &entity.MutationResponse{
		Success:  true,
		Messages: []string{"グループを削除しました。"},
	}, nil
}
