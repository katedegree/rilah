package resolver

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.74

import (
	"back/domain/constant"
	"back/domain/entity"
	"back/infrastructure/repository"
	"back/usecase"
	"context"
	"errors"
)

// Groups is the resolver for the groups field.
func (r *queryResolver) Groups(ctx context.Context) ([]*entity.GroupEntity, error) {
	authUser := ctx.Value(constant.AUTH_USER_KEY).(*entity.UserEntity)
	orm := r.Resolver.Orm

	userGroupsUsecase := usecase.NewGetUserGroupsUsecase(
		repository.NewGroupRepository(orm),
	)
	groups, err := userGroupsUsecase.Execute(authUser.ID)
	if err != nil {
		return nil, errors.New(err.Message)
	}

	return groups, nil
}
