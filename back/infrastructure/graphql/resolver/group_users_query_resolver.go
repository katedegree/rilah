package resolver

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.75

import (
	"back/domain/constant"
	"back/domain/entity"
	"back/infrastructure/repository"
	"back/usecase"
	"context"
	"errors"
)

// GroupUsers is the resolver for the groupUsers field.
func (r *queryResolver) GroupUsers(ctx context.Context, groupID uint32) ([]*entity.UserEntity, error) {
	authUser := ctx.Value(constant.AUTH_USER_KEY).(*entity.UserEntity)
	orm := r.Resolver.Orm

	getUserGroupsUsecase := usecase.NewGetGroupUsersUsecase(
		repository.NewUserRepository(orm),
	)

	users, err := getUserGroupsUsecase.Execute(authUser.ID, groupID)
	if err != nil {
		return nil, errors.New(err.Message)
	}

	return users, nil
}
