package resolver

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.73

import (
	"back/domain/entity"
	"back/infrastructure/repository"
	"back/usecase"
	"context"
)

// UpdateGroup is the resolver for the updateGroup field.
func (r *mutationResolver) UpdateGroup(ctx context.Context, groupID uint32, name string) (*entity.MutationResponse, error) {
	authUser := ctx.Value("authUser").(*entity.UserEntity)
	orm := r.Resolver.Orm

	updateGroupUsecase := usecase.NewUpdateGroupUsecase(
		repository.NewGroupRepository(orm),
	)

	ge := &entity.GroupEntity{
		ID:   groupID,
		Name: name,
	}
	_, err := updateGroupUsecase.Execute(ge, authUser.ID)
	if err != nil {
		return &entity.MutationResponse{
			Success:  false,
			Messages: []string{err.Message},
		}, nil
	}

	return &entity.MutationResponse{
		Success:  true,
		Messages: []string{"グループを更新しました"},
	}, nil
}
